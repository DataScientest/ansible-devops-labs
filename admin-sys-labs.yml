services:
  lb-reverse-proxy:
    hostname: lb-reverse-proxy
    container_name: lb-reverse-proxy
    image: fallewi/datascientest-labs:ubunu
    ports: 
     - ${UBUNTUC_PORT_SSHD}:22
     - ${UBUNTUC_PORT_TTYD}:7681
    privileged: true
    volumes:
     - ${CONFIG}:/config
     - ${ANSIBLE_HOME}/shared:/shared
     - ${ANSIBLE_HOME}/ubuntu-c/ansible:/home/ansible
     - ${ANSIBLE_HOME}/ubuntu-c/root:/root
    networks:
     - datascientest-network

  client1:
    hostname: client1
    container_name: client1
    image: fallewi/datascientest-labs:ubuntu
    ports: 
     - ${UBUNTU1_PORT_SSHD}:22
     - ${UBUNTU1_PORT_TTYD}:7681
    privileged: true
    volumes:
     - ${CONFIG}:/config
     - ${ANSIBLE_HOME}/shared:/shared
     - ${ANSIBLE_HOME}/ubuntu1/ansible:/home/ansible
     - ${ANSIBLE_HOME}/ubuntu1/root:/root
    networks:
     - datascientest-network

  client2:
    hostname: client2
    container_name: client2
    image: fallewi/datascientest-labs:ubuntu
    ports: 
     - ${UBUNTU2_PORT_SSHD}:22
     - ${UBUNTU2_PORT_TTYD}:7681
    privileged: true
    volumes:
     - ${CONFIG}:/config
     - ${ANSIBLE_HOME}/shared:/shared
     - ${ANSIBLE_HOME}/ubuntu2/ansible:/home/ansible
     - ${ANSIBLE_HOME}/ubuntu2/root:/root
    networks:
     - datascientest-network


networks:
  datascientest-network:
    name: datascientest-network-adminsys
    # Canonical bridge interface name
    #
    # The setting below provides a friendly name for the bridge interface
    # as seen in the likes of the ip command.  Use at your own discretion
    #
    #driver_opts:
    #  com.docker.network.bridge.name: "datascientest-network"